<?xml version="1.0" encoding="UTF-8"?>
<!-- Repository and Service layers -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->

	<!-- Configurer that replaces ${...} placeholders with values from a properties 
		file (in this case, JDBC-related settings for the JPA EntityManager definition 
		below) -->
	<context:property-placeholder location="classpath:spring/data-access.properties" order="1"
		ignore-unresolvable="true"/>

	<!-- import the dataSource definition -->
	<import resource="datasource-config.xml" />

	<context:component-scan base-package="mk.ukim.finki.wp.service" />
	<!-- <context:component-scan base-package="mk.ukim.finki.wp.repository" 
		/> <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource" /> <property name="packagesToScan" 
		value="mk.ukim.finki.wp.model" /> </bean> <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager" 
		p:sessionFactory-ref="sessionFactory" /> -->

	<!-- enables scanning for @Transactional annotations -->
	<tx:annotation-driven />

	<beans>
		<jpa:repositories base-package="mk.ukim.finki.wp.repository" />
		<bean id="entityManagerFactory"
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
			p:dataSource-ref="dataSource">
			<property name="jpaVendorAdapter">
				<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
					p:database="${jpa.database}" p:generateDdl="${jpa.generateDDL}"
					p:showSql="${jpa.showSQL}" />
			</property>
			<property name="persistenceUnitName" value="wp" />
			<property name="packagesToScan" value="mk.ukim.finki.wp" />
		</bean>
		<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
			p:entityManagerFactory-ref="entityManagerFactory" />
		<bean
			class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	</beans>

	<!-- Post-processor to perform exception translation on @Repository classes 
		(from native exceptions such as JPA PersistenceExceptions to Spring's DataAccessException 
		hierarchy). -->

</beans>